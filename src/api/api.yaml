openapi: "3.0.1"
info:
  title: "KinesisProxyApi"
  description: "API Gateway to Kinesis Proxy"
  version: "2021-11-07T08:21:24Z"
servers:
- url: "https://d3rcepd6u1.execute-api.us-east-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "/prod"
paths:
  /streams/{stream-name}/sharditerator:
    get:
      parameters:
      - name: "stream-name"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "shard-id"
        in: "query"
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "aws"
        credentials:
          Fn::Sub: "${ApiKinesisExecutionRole.Arn}"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:${AWS::Region}:kinesis:action/GetShardIterator"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.Content-Type: "'x-amz-json-1.1'"
        requestTemplates:
          application/json: "{\n    \"ShardId\": \"$input.params('shard-id')\",\n\
            \    \"ShardIteratorType\": \"TRIM_HORIZON\",\n    \"StreamName\": \"\
            $input.params('stream-name')\"\n}"
        passthroughBehavior: "when_no_templates"
    options:
      parameters:
      - name: "stream-name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type',\
                \ 'Authorization', 'X-Forwarded-For', 'X-Api-Key', 'X-Amz-Date', 'X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
  /streams/{stream-name}/records:
    get:
      parameters:
      - name: "Shard-Iterator"
        in: "query"
        schema:
          type: "string"
      - name: "stream-name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "aws"
        credentials: "arn:aws:iam::779683736878:role/KinesisAPIGIntegration"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:kinesis:action/GetRecords"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\n    \"ShardIterator\": \"$input.params('Shard-Iterator')\"\
            \n}"
        passthroughBehavior: "when_no_templates"
    put:
      parameters:
      - name: "stream-name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "aws"
        credentials: "arn:aws:iam::779683736878:role/KinesisAPIGIntegration"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:kinesis:action/PutRecords"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.Content-Type: "'x-amz-json-1.1'"
        requestTemplates:
          application/json: "{\n    \"StreamName\": \"$input.params('stream-name')\"\
            ,\n    \"Records\": [\n       #foreach($elem in $input.path('$.records'))\n\
            \          {\n            \"Data\": \"$util.base64Encode($elem.data)\"\
            ,\n            \"PartitionKey\": \"$elem.partition-key\"\n          }#if($foreach.hasNext),#end\n\
            \        #end\n    ]\n}"
        passthroughBehavior: "when_no_templates"
    options:
      parameters:
      - name: "stream-name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Shard-Iterator:
              schema:
                type: "string"
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'PUT, GET, OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,Shard-Iterator'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
  /streams/{stream-name}:
    get:
      parameters:
      - name: "stream-name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "aws"
        credentials: "arn:aws:iam::779683736878:role/KinesisAPIGIntegration"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:kinesis:action/DescribeStream"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.Content-Type: "'x-amz-json-1.1'"
        requestTemplates:
          application/json: "{\n    \"StreamName\": \"$input.params('stream-name')\"\
            \n}"
        passthroughBehavior: "when_no_templates"
  /streams/{stream-name}/record:
    put:
      parameters:
      - name: "stream-name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "aws"
        credentials: "arn:aws:iam::779683736878:role/KinesisAPIGIntegration"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:kinesis:action/PutRecord"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.Content-Type: "'x-amz-json-1.1'"
        requestTemplates:
          application/json: "{\n    \"StreamName\": \"$input.params('stream-name')\"\
            ,\n    \"Data\": \"$util.base64Encode($input.json('$.Data'))\",\n    \"\
            PartitionKey\": \"$input.path('$.PartitionKey')\"\n}"
        passthroughBehavior: "when_no_templates"
    options:
      parameters:
      - name: "stream-name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type',\
                \ 'Authorization', 'X-Forwarded-For', 'X-Api-Key', 'X-Amz-Date', 'X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
  /streams:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "aws"
        credentials: "arn:aws:iam::779683736878:role/KinesisAPIGIntegration"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:kinesis:action/ListStreams"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.Content-Type: "'application/x-amz-json-1.1'"
        requestTemplates:
          application/json: "{}"
        passthroughBehavior: "when_no_templates"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
